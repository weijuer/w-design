// https://dev.to/codyhouse/flash-grid-learn-css-grid-by-building-a-grid-system-2c4f

:root {
  --grid-rows: 1;
  --grid-column: 12;
  --w-grid-row-gap: 15px;
}

$rows: 1 !default;
$columns: 12 !default;
$gap: 15px !default;
$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
) !default;

@mixin create-selectors($breakpoint: null) {
  $infix: if($breakpoint ==null, '', '__#{$breakpoint}');

  @for $i from 1 through $columns {
    .w-col#{$infix}-#{$i} {
      grid-column-end: span $i;
    }

    .w-col__offset#{$infix}-#{$i} {
      grid-column-start: $i + 1;
    }

    .w-row#{$infix}-#{$i} {
      grid-row-end: span $i;
    }

    .w-row__offset#{$infix}-#{$i} {
      grid-row-start: $i + 1;
    }
  }
}

.w-grid,
[class*=''] {
  display: grid;
  gap: var(--w-grid-row-gap, 0);
}

.w-grid {
  --w-grid-cols: #{$columns};

  // grid-template-rows: repeat($rows, 1fr);
  grid-template-columns: repeat(var(--w-grid-cols), 1fr);

  .w-grid__item {
    grid-column-start: span var(--w-grid-cols);
  }

  @include create-selectors;

  @each $breakpoint, $width in $breakpoints {
    @media (min-width: #{$width}) {
      @include create-selectors($breakpoint);
    }
  }
}

// cols = same size
.w-grid-auto-cols {
  grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}
